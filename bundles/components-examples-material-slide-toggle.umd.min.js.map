{"version":3,"sources":["src/components-examples/components-examples-material-slide-toggle.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","componentsExamples","material","slideToggle","core","forms","button","card","checkbox","radio","this","i0","i1","i3","i1$1","i4","i2","i2$1","SlideToggleConfigurableExample","color","checked","disabled","decorators","type","Component","args","selector","templateUrl","styleUrls","ɵfac","SlideToggleConfigurableExample_Factory","t","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","SlideToggleConfigurableExample_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SlideToggleConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener","$event","SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_15_listener","SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener","ɵɵadvance","ɵɵproperty","directives","MatCard","MatCardContent","MatRadioGroup","NgControlStatus","NgModel","MatRadioButton","MatCheckbox","MatSlideToggle","styles","SlideToggleFormsExample","formBuilder","isChecked","formGroup","group","enableWifi","acceptTerms","Validators","requiredTrue","prototype","onFormSubmit","alert","JSON","stringify","value","ctorParameters","FormBuilder","SlideToggleFormsExample_Factory","ɵɵdirectiveInject","SlideToggleFormsExample_Template","SlideToggleFormsExample_Template_mat_slide_toggle_ngModelChange_2_listener","SlideToggleFormsExample_Template_form_ngSubmit_6_listener","SlideToggleFormsExample_Template_form_ngSubmit_16_listener","ɵɵtextInterpolate1","status","NgControlStatusGroup","NgForm","MatSlideToggleRequiredValidator","RequiredValidator","MatButton","FormGroupDirective","FormControlName","SlideToggleOverviewExample","SlideToggleOverviewExample_Factory","SlideToggleOverviewExample_Template","EXAMPLES","SlideToggleExamplesModule","NgModule","imports","FormsModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatRadioModule","MatSlideToggleModule","ReactiveFormsModule","declarations","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","SlideToggleExamplesModule_Factory","ngJitMode","ɵɵsetNgModuleScope","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/radio'), require('@angular/material/slide-toggle')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/slide-toggle', ['exports', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/card', '@angular/material/checkbox', '@angular/material/radio', '@angular/material/slide-toggle'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.slideToggle = {}), global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material.card, global.ng.material.checkbox, global.ng.material.radio, global.ng.material.slideToggle));\n}(this, (function (exports, i0, i1, i3, i1$1, i4, i2, i2$1) { 'use strict';\n\n    /**\n     * @title Configurable slide-toggle\n     */\n    var SlideToggleConfigurableExample = /** @class */ (function () {\n        function SlideToggleConfigurableExample() {\n            this.color = 'accent';\n            this.checked = false;\n            this.disabled = false;\n        }\n        SlideToggleConfigurableExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'slide-toggle-configurable-example',\n                        templateUrl: 'slide-toggle-configurable-example.html',\n                        styleUrls: ['slide-toggle-configurable-example.css'],\n                    },] },\n        ];\n        SlideToggleConfigurableExample.ɵfac = function SlideToggleConfigurableExample_Factory(t) { return new (t || SlideToggleConfigurableExample)(); };\n        SlideToggleConfigurableExample.ɵcmp = i0.ɵɵdefineComponent({ type: SlideToggleConfigurableExample, selectors: [[\"slide-toggle-configurable-example\"]], decls: 27, vars: 6, consts: [[1, \"example-h2\"], [1, \"example-section\"], [1, \"example-margin\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"primary\", 1, \"example-margin\"], [\"value\", \"accent\", 1, \"example-margin\"], [\"value\", \"warn\", 1, \"example-margin\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"], [1, \"result\"], [1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\"]], template: function SlideToggleConfigurableExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-card\");\n                i0.ɵɵelementStart(1, \"mat-card-content\");\n                i0.ɵɵelementStart(2, \"h2\", 0);\n                i0.ɵɵtext(3, \"Slider configuration\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(4, \"section\", 1);\n                i0.ɵɵelementStart(5, \"label\", 2);\n                i0.ɵɵtext(6, \"Color:\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(7, \"mat-radio-group\", 3);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener($event) { return ctx.color = $event; });\n                i0.ɵɵelementStart(8, \"mat-radio-button\", 4);\n                i0.ɵɵtext(9, \" Primary \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(10, \"mat-radio-button\", 5);\n                i0.ɵɵtext(11, \" Accent \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(12, \"mat-radio-button\", 6);\n                i0.ɵɵtext(13, \" Warn \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(14, \"section\", 1);\n                i0.ɵɵelementStart(15, \"mat-checkbox\", 7);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_15_listener($event) { return ctx.checked = $event; });\n                i0.ɵɵtext(16, \"Checked\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(17, \"section\", 1);\n                i0.ɵɵelementStart(18, \"mat-checkbox\", 7);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener($event) { return ctx.disabled = $event; });\n                i0.ɵɵtext(19, \"Disabled\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(20, \"mat-card\", 8);\n                i0.ɵɵelementStart(21, \"mat-card-content\");\n                i0.ɵɵelementStart(22, \"h2\", 0);\n                i0.ɵɵtext(23, \"Result\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(24, \"section\", 1);\n                i0.ɵɵelementStart(25, \"mat-slide-toggle\", 9);\n                i0.ɵɵtext(26, \" Slide me! \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵadvance(7);\n                i0.ɵɵproperty(\"ngModel\", ctx.color);\n                i0.ɵɵadvance(8);\n                i0.ɵɵproperty(\"ngModel\", ctx.checked);\n                i0.ɵɵadvance(3);\n                i0.ɵɵproperty(\"ngModel\", ctx.disabled);\n                i0.ɵɵadvance(7);\n                i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n            } }, directives: [i1$1.MatCard, i1$1.MatCardContent, i2.MatRadioGroup, i1.NgControlStatus, i1.NgModel, i2.MatRadioButton, i4.MatCheckbox, i2$1.MatSlideToggle], styles: [\".example-h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n\\n.example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\"] });\n        return SlideToggleConfigurableExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(SlideToggleConfigurableExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'slide-toggle-configurable-example',\n                    templateUrl: 'slide-toggle-configurable-example.html',\n                    styleUrls: ['slide-toggle-configurable-example.css'],\n                }]\n        }], null, null); })();\n\n    /**\n     * @title Slide-toggle with forms\n     */\n    var SlideToggleFormsExample = /** @class */ (function () {\n        function SlideToggleFormsExample(formBuilder) {\n            this.isChecked = true;\n            this.formGroup = formBuilder.group({\n                enableWifi: '',\n                acceptTerms: ['', i1.Validators.requiredTrue]\n            });\n        }\n        SlideToggleFormsExample.prototype.onFormSubmit = function () {\n            alert(JSON.stringify(this.formGroup.value, null, 2));\n        };\n        SlideToggleFormsExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'slide-toggle-forms-example',\n                        templateUrl: './slide-toggle-forms-example.html',\n                        styleUrls: ['./slide-toggle-forms-example.css'],\n                    },] },\n        ];\n        /** @nocollapse */\n        SlideToggleFormsExample.ctorParameters = function () { return [\n            { type: i1.FormBuilder }\n        ]; };\n        SlideToggleFormsExample.ɵfac = function SlideToggleFormsExample_Factory(t) { return new (t || SlideToggleFormsExample)(i0.ɵɵdirectiveInject(i1.FormBuilder)); };\n        SlideToggleFormsExample.ɵcmp = i0.ɵɵdefineComponent({ type: SlideToggleFormsExample, selectors: [[\"slide-toggle-forms-example\"]], decls: 25, vars: 4, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"ngNativeValidate\", \"\", 1, \"example-form\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"ngModel\", \"\", \"name\", \"enableWifi\"], [\"ngModel\", \"\", \"name\", \"acceptTerms\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"], [\"ngNativeValidate\", \"\", 1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"enableWifi\"], [\"formControlName\", \"acceptTerms\"], [\"mat-rasied-button\", \"\", \"type\", \"submit\"]], template: function SlideToggleFormsExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"p\");\n                i0.ɵɵtext(1, \"Slide Toggle using a simple NgModel.\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(2, \"mat-slide-toggle\", 0);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleFormsExample_Template_mat_slide_toggle_ngModelChange_2_listener($event) { return ctx.isChecked = $event; });\n                i0.ɵɵtext(3);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(4, \"p\");\n                i0.ɵɵtext(5, \"Slide Toggle inside of a Template-driven form\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(6, \"form\", 1, 2);\n                i0.ɵɵlistener(\"ngSubmit\", function SlideToggleFormsExample_Template_form_ngSubmit_6_listener($event) { return ctx.onFormSubmit(); });\n                i0.ɵɵelementStart(8, \"mat-slide-toggle\", 3);\n                i0.ɵɵtext(9, \"Enable Wifi\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(10, \"mat-slide-toggle\", 4);\n                i0.ɵɵtext(11, \"Accept Terms of Service\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(12, \"button\", 5);\n                i0.ɵɵtext(13, \"Save Settings\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(14, \"p\");\n                i0.ɵɵtext(15, \"Slide Toggle inside of a Reactive form\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(16, \"form\", 6);\n                i0.ɵɵlistener(\"ngSubmit\", function SlideToggleFormsExample_Template_form_ngSubmit_16_listener($event) { return ctx.onFormSubmit(); });\n                i0.ɵɵelementStart(17, \"mat-slide-toggle\", 7);\n                i0.ɵɵtext(18, \"Enable Wifi\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(19, \"mat-slide-toggle\", 8);\n                i0.ɵɵtext(20, \"Accept Terms of Service\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(21, \"p\");\n                i0.ɵɵtext(22);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(23, \"button\", 9);\n                i0.ɵɵtext(24, \"Save Settings\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"ngModel\", ctx.isChecked);\n                i0.ɵɵadvance(1);\n                i0.ɵɵtextInterpolate1(\"Slide Toggle Checked: \", ctx.isChecked, \"\");\n                i0.ɵɵadvance(13);\n                i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n                i0.ɵɵadvance(6);\n                i0.ɵɵtextInterpolate1(\"Form Group Status: \", ctx.formGroup.status, \"\");\n            } }, directives: [i2$1.MatSlideToggle, i1.NgControlStatus, i1.NgModel, i1.NgControlStatusGroup, i1.NgForm, i2$1.MatSlideToggleRequiredValidator, i1.RequiredValidator, i3.MatButton, i1.FormGroupDirective, i1.FormControlName], styles: [\".example-form[_ngcontent-%COMP%]   mat-slide-toggle[_ngcontent-%COMP%] {\\n  margin: 8px 0;\\n  display: block;\\n}\"] });\n        return SlideToggleFormsExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(SlideToggleFormsExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'slide-toggle-forms-example',\n                    templateUrl: './slide-toggle-forms-example.html',\n                    styleUrls: ['./slide-toggle-forms-example.css'],\n                }]\n        }], function () { return [{ type: i1.FormBuilder }]; }, null); })();\n\n    /**\n     * @title Basic slide-toggles\n     */\n    var SlideToggleOverviewExample = /** @class */ (function () {\n        function SlideToggleOverviewExample() {\n        }\n        SlideToggleOverviewExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'slide-toggle-overview-example',\n                        templateUrl: 'slide-toggle-overview-example.html',\n                        styleUrls: ['slide-toggle-overview-example.css'],\n                    },] },\n        ];\n        SlideToggleOverviewExample.ɵfac = function SlideToggleOverviewExample_Factory(t) { return new (t || SlideToggleOverviewExample)(); };\n        SlideToggleOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: SlideToggleOverviewExample, selectors: [[\"slide-toggle-overview-example\"]], decls: 2, vars: 0, template: function SlideToggleOverviewExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-slide-toggle\");\n                i0.ɵɵtext(1, \"Slide me!\");\n                i0.ɵɵelementEnd();\n            } }, directives: [i2$1.MatSlideToggle], styles: [\"\"] });\n        return SlideToggleOverviewExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(SlideToggleOverviewExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'slide-toggle-overview-example',\n                    templateUrl: 'slide-toggle-overview-example.html',\n                    styleUrls: ['slide-toggle-overview-example.css'],\n                }]\n        }], null, null); })();\n\n    var EXAMPLES = [\n        SlideToggleConfigurableExample,\n        SlideToggleFormsExample,\n        SlideToggleOverviewExample,\n    ];\n    var SlideToggleExamplesModule = /** @class */ (function () {\n        function SlideToggleExamplesModule() {\n        }\n        SlideToggleExamplesModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [\n                            i1.FormsModule,\n                            i3.MatButtonModule,\n                            i1$1.MatCardModule,\n                            i4.MatCheckboxModule,\n                            i2.MatRadioModule,\n                            i2$1.MatSlideToggleModule,\n                            i1.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] },\n        ];\n        SlideToggleExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: SlideToggleExamplesModule });\n        SlideToggleExamplesModule.ɵinj = i0.ɵɵdefineInjector({ factory: function SlideToggleExamplesModule_Factory(t) { return new (t || SlideToggleExamplesModule)(); }, imports: [[\n                    i1.FormsModule,\n                    i3.MatButtonModule,\n                    i1$1.MatCardModule,\n                    i4.MatCheckboxModule,\n                    i2.MatRadioModule,\n                    i2$1.MatSlideToggleModule,\n                    i1.ReactiveFormsModule,\n                ]] });\n        return SlideToggleExamplesModule;\n    }());\n    (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SlideToggleExamplesModule, { declarations: [SlideToggleConfigurableExample,\n            SlideToggleFormsExample,\n            SlideToggleOverviewExample], imports: [i1.FormsModule,\n            i3.MatButtonModule,\n            i1$1.MatCardModule,\n            i4.MatCheckboxModule,\n            i2.MatRadioModule,\n            i2$1.MatSlideToggleModule,\n            i1.ReactiveFormsModule], exports: [SlideToggleConfigurableExample,\n            SlideToggleFormsExample,\n            SlideToggleOverviewExample] }); })();\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(SlideToggleExamplesModule, [{\n            type: i0.NgModule,\n            args: [{\n                    imports: [\n                        i1.FormsModule,\n                        i3.MatButtonModule,\n                        i1$1.MatCardModule,\n                        i4.MatCheckboxModule,\n                        i2.MatRadioModule,\n                        i2$1.MatSlideToggleModule,\n                        i1.ReactiveFormsModule,\n                    ],\n                    declarations: EXAMPLES,\n                    exports: EXAMPLES,\n                }]\n        }], null, null); })();\n\n    exports.SlideToggleConfigurableExample = SlideToggleConfigurableExample;\n    exports.SlideToggleExamplesModule = SlideToggleExamplesModule;\n    exports.SlideToggleFormsExample = SlideToggleFormsExample;\n    exports.SlideToggleOverviewExample = SlideToggleOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-slide-toggle.umd.js.map\n"]}