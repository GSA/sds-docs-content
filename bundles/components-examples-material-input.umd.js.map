{"version":3,"file":"components-examples-material-input.umd.js","sources":["../../../../../../../src/components-examples/material/input/input-clearable/input-clearable-example.html","../../../../../../../src/components-examples/material/input/input-clearable/input-clearable-example.ts","../../../../../../../src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.html","../../../../../../../src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.ts","../../../../../../../src/components-examples/material/input/input-errors/input-errors-example.html","../../../../../../../src/components-examples/material/input/input-errors/input-errors-example.ts","../../../../../../../src/components-examples/material/input/input-form/input-form-example.ts","../../../../../../../src/components-examples/material/input/input-form/input-form-example.html","../../../../../../../src/components-examples/material/input/input-hint/input-hint-example.ts","../../../../../../../src/components-examples/material/input/input-hint/input-hint-example.html","../../../../../../../src/components-examples/material/input/input-overview/input-overview-example.ts","../../../../../../../src/components-examples/material/input/input-overview/input-overview-example.html","../../../../../../../src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.ts","../../../../../../../src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.html","../../../../../../../src/components-examples/material/input/index.ts"],"sourcesContent":["<mat-form-field class=\"example-form-field\">\n  <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\">\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with a clear button\n */\n@Component({\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrls: ['./input-clearable-example.css'],\n})\nexport class InputClearableExample {\n  value = 'Clear me';\n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\"\n           [errorStateMatcher]=\"matcher\">\n    <mat-hint>Errors appear instantly!</mat-hint>\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrls: ['./input-error-state-matcher-example.css'],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\">\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/**\n * @title Input with error messages\n */\n@Component({\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrls: ['input-errors-example.css'],\n})\nexport class InputErrorsExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs in a form\n */\n@Component({\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrls: ['input-form-example.css'],\n})\nexport class InputFormExample {}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\n  </mat-form-field>\n\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"First name\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\n    </mat-form-field></td>\n  </tr></table>\n\n  <p>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"Address 2\"></textarea>\n    </mat-form-field>\n  </p>\n\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"City\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"State\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\n      <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n    </mat-form-field></td>\n  </tr></table>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with hints\n */\n@Component({\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrls: ['input-hint-example.css'],\n})\nexport class InputHintExample {}\n","<form class=\"example-form\">\n\n  <mat-form-field class=\"example-full-width\">\n    <input matInput #message maxlength=\"256\" placeholder=\"Message\">\n    <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint>\n    <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\n  </mat-form-field>\n  \n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic Inputs\n */\n@Component({\n  selector: 'input-overview-example',\n  styleUrls: ['input-overview-example.css'],\n  templateUrl: 'input-overview-example.html',\n})\nexport class InputOverviewExample {}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <textarea matInput placeholder=\"Leave a comment\"></textarea>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs with prefixes and suffixes\n */\n@Component({\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n  styleUrls: ['input-prefix-suffix-example.css'],\n})\nexport class InputPrefixSuffixExample {}\n","<form class=\"example-form\">\n\n  <mat-form-field class=\"example-full-width\">\n    <span matPrefix>+1 &nbsp;</span>\n    <input type=\"tel\" matInput placeholder=\"Telephone\">\n    <mat-icon matSuffix>mode_edit</mat-icon>\n  </mat-form-field>\n  \n</form>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {InputClearableExample} from './input-clearable/input-clearable-example';\nimport {\n  InputErrorStateMatcherExample\n} from './input-error-state-matcher/input-error-state-matcher-example';\nimport {InputErrorsExample} from './input-errors/input-errors-example';\nimport {InputFormExample} from './input-form/input-form-example';\nimport {InputHintExample} from './input-hint/input-hint-example';\nimport {InputOverviewExample} from './input-overview/input-overview-example';\nimport {InputPrefixSuffixExample} from './input-prefix-suffix/input-prefix-suffix-example';\n\nexport {\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n};\n\nconst EXAMPLES = [\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class InputExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","Component","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","FormControl","Validators","i0.ɵɵelement","i0.ɵɵtextInterpolate1","NgModule","CommonModule","MatButtonModule","MatIconModule","MatInputModule","FormsModule","ReactiveFormsModule"],"mappings":"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"}