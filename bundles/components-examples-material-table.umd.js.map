{"version":3,"file":"components-examples-material-table.umd.js","sources":["../../../../../../../src/components-examples/material/table/table-basic-flex/table-basic-flex-example.html","../../../../../../../src/components-examples/material/table/table-basic-flex/table-basic-flex-example.ts","../../../../../../../src/components-examples/material/table/table-basic/table-basic-example.html","../../../../../../../src/components-examples/material/table/table-basic/table-basic-example.ts","../../../../../../../src/components-examples/material/table/table-dynamic-columns/table-dynamic-columns-example.html","../../../../../../../src/components-examples/material/table/table-dynamic-columns/table-dynamic-columns-example.ts","../../../../../../../src/components-examples/material/table/table-expandable-rows/table-expandable-rows-example.html","../../../../../../../src/components-examples/material/table/table-expandable-rows/table-expandable-rows-example.ts","../../../../../../../src/components-examples/material/table/table-filtering/table-filtering-example.html","../../../../../../../src/components-examples/material/table/table-filtering/table-filtering-example.ts","../../../../../../../src/components-examples/material/table/table-footer-row/table-footer-row-example.html","../../../../../../../src/components-examples/material/table/table-footer-row/table-footer-row-example.ts","../../../../../../../src/components-examples/material/table/table-http/table-http-example.html","../../../../../../../src/components-examples/material/table/table-http/table-http-example.ts","../../../../../../../src/components-examples/material/table/table-multiple-header-footer/table-multiple-header-footer-example.html","../../../../../../../src/components-examples/material/table/table-multiple-header-footer/table-multiple-header-footer-example.ts","../../../../../../../src/components-examples/material/table/table-overview/table-overview-example.html","../../../../../../../src/components-examples/material/table/table-overview/table-overview-example.ts","../../../../../../../src/components-examples/material/table/table-pagination/table-pagination-example.html","../../../../../../../src/components-examples/material/table/table-pagination/table-pagination-example.ts","../../../../../../../src/components-examples/material/table/table-row-context/table-row-context-example.html","../../../../../../../src/components-examples/material/table/table-row-context/table-row-context-example.ts","../../../../../../../src/components-examples/material/table/table-selection/table-selection-example.html","../../../../../../../src/components-examples/material/table/table-selection/table-selection-example.ts","../../../../../../../src/components-examples/material/table/table-sorting/table-sorting-example.html","../../../../../../../src/components-examples/material/table/table-sorting/table-sorting-example.ts","../../../../../../../src/components-examples/material/table/table-sticky-columns/table-sticky-columns-example.html","../../../../../../../src/components-examples/material/table/table-sticky-columns/table-sticky-columns-example.ts","../../../../../../../src/components-examples/material/table/table-sticky-complex-flex/table-sticky-complex-flex-example.html","../../../../../../../src/components-examples/material/table/table-sticky-complex-flex/table-sticky-complex-flex-example.ts","../../../../../../../src/components-examples/material/table/table-sticky-complex/table-sticky-complex-example.html","../../../../../../../src/components-examples/material/table/table-sticky-complex/table-sticky-complex-example.ts","../../../../../../../src/components-examples/material/table/table-sticky-footer/table-sticky-footer-example.html","../../../../../../../src/components-examples/material/table/table-sticky-footer/table-sticky-footer-example.ts","../../../../../../../src/components-examples/material/table/table-sticky-header/table-sticky-header-example.html","../../../../../../../src/components-examples/material/table/table-sticky-header/table-sticky-header-example.ts","../../../../../../../src/components-examples/material/table/table-text-column-advanced/table-text-column-advanced-example.html","../../../../../../../src/components-examples/material/table/table-text-column-advanced/table-text-column-advanced-example.ts","../../../../../../../src/components-examples/material/table/table-text-column/table-text-column-example.html","../../../../../../../src/components-examples/material/table/table-text-column/table-text-column-example.ts","../../../../../../../src/components-examples/material/table/table-wrapped/table-wrapped-example.html","../../../../../../../src/components-examples/material/table/table-wrapped/wrapper-table.html","../../../../../../../src/components-examples/material/table/table-wrapped/table-wrapped-example.ts","../../../../../../../src/components-examples/material/table/index.ts"],"sourcesContent":["<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<mat-table>` (uses display flex)\n */\n@Component({\n  selector: 'table-basic-flex-example',\n  styleUrls: ['table-basic-flex-example.css'],\n  templateUrl: 'table-basic-flex-example.html',\n})\nexport class TableBasicFlexExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'table-basic-example',\n  styleUrls: ['table-basic-example.css'],\n  templateUrl: 'table-basic-example.html',\n})\nexport class TableBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<button mat-raised-button (click)=\"addColumn()\"> Add column </button>\n<button mat-raised-button (click)=\"removeColumn()\"> Remove column </button>\n<button mat-raised-button (click)=\"shuffle()\"> Shuffle </button>\n\n<table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n  <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table dynamically changing the columns displayed\n */\n@Component({\n  selector: 'table-dynamic-columns-example',\n  styleUrls: ['table-dynamic-columns-example.css'],\n  templateUrl: 'table-dynamic-columns-example.html',\n})\nexport class TableDynamicColumnsExample {\n  displayedColumns: string[] = ['name', 'weight', 'symbol', 'position'];\n  columnsToDisplay: string[] = this.displayedColumns.slice();\n  data: PeriodicElement[] = ELEMENT_DATA;\n\n  addColumn() {\n    const randomColumn = Math.floor(Math.random() * this.displayedColumns.length);\n    this.columnsToDisplay.push(this.displayedColumns[randomColumn]);\n  }\n\n  removeColumn() {\n    if (this.columnsToDisplay.length) {\n      this.columnsToDisplay.pop();\n    }\n  }\n\n  shuffle() {\n    let currentIndex = this.columnsToDisplay.length;\n    while (0 !== currentIndex) {\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // Swap\n      let temp = this.columnsToDisplay[currentIndex];\n      this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\n      this.columnsToDisplay[randomIndex] = temp;\n    }\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-diagram\">\n          <div class=\"example-element-position\"> {{element.position}} </div>\n          <div class=\"example-element-symbol\"> {{element.symbol}} </div>\n          <div class=\"example-element-name\"> {{element.name}} </div>\n          <div class=\"example-element-weight\"> {{element.weight}} </div>\n        </div>\n        <div class=\"example-element-description\">\n          {{element.description}}\n          <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n/**\n * @title Table with expandable rows\n */\n@Component({\n  selector: 'table-expandable-rows-example',\n  styleUrls: ['table-expandable-rows-example.css'],\n  templateUrl: 'table-expandable-rows-example.html',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableExpandableRowsExample {\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement | null;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalentâmaking four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];\n","<mat-form-field>\n  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n</mat-form-field>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with filtering\n */\n@Component({\n  selector: 'table-filtering-example',\n  styleUrls: ['table-filtering-example.css'],\n  templateUrl: 'table-filtering-example.html',\n})\nexport class TableFilteringExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\n  <!-- Item Column -->\n  <ng-container matColumnDef=\"item\">\n    <th mat-header-cell *matHeaderCellDef> Item </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"cost\">\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Footer row table\n */\n@Component({\n  selector: 'table-footer-row-example',\n  styleUrls: ['table-footer-row-example.css'],\n  templateUrl: 'table-footer-row-example.html',\n})\nexport class TableFooterRowExample {\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\"\n       *ngIf=\"isLoadingResults || isRateLimitReached\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n      GitHub's API rate limit has been reached. It will be reset in one minute.\n    </div>\n  </div>\n\n  <div class=\"example-table-container\">\n\n    <table mat-table [dataSource]=\"data\" class=\"example-table\"\n           matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n      <ng-container matColumnDef=\"number\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef>State</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n      </ng-container>\n\n      <!-- Created Column -->\n      <ng-container matColumnDef=\"created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n          Created\n        </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\n</div>\n","import {HttpClient} from '@angular/common/http';\nimport {Component, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\n/**\n * @title Table retrieving data through HTTP\n */\n@Component({\n  selector: 'table-http-example',\n  styleUrls: ['table-http-example.css'],\n  templateUrl: 'table-http-example.html',\n})\nexport class TableHttpExample implements AfterViewInit {\n  displayedColumns: string[] = ['created', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDatabase | null;\n  data: GithubIssue[] = [];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private _httpClient: HttpClient) {}\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRepoIssues(\n            this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }),\n        map(data => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          this.isRateLimitReached = true;\n          return observableOf([]);\n        })\n      ).subscribe(data => this.data = data);\n  }\n}\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private _httpClient: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n        `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n\n    return this._httpClient.get<GithubApi>(requestUrl);\n  }\n}\n","<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\n  <!-- Item Column -->\n  <ng-container matColumnDef=\"item\">\n    <th mat-header-cell *matHeaderCellDef> Item </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"cost\">\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <!-- Item Description Column -->\n  <ng-container matColumnDef=\"item-description\">\n    <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\n  </ng-container>\n\n  <!-- Cost Description Column -->\n  <ng-container matColumnDef=\"cost-description\">\n    <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\n  </ng-container>\n\n  <!-- Disclaimer column -->\n  <ng-container matColumnDef=\"disclaimer\">\n    <td mat-footer-cell *matFooterCellDef colspan=\"2\">\n      Please note that the cost of items displayed are completely and totally made up.\n    </td>\n  </ng-container>\n\n  <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"\n      class=\"example-first-header-row\">\n  </tr>\n  <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\n      class=\"example-second-header-row\">\n  </tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {Transaction} from '../table-footer-row/table-footer-row-example';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Table with multiple header and footer rows\n */\n@Component({\n  selector: 'table-multiple-header-footer-example',\n  styleUrls: ['table-multiple-header-footer-example.css'],\n  templateUrl: 'table-multiple-header-footer-example.html',\n})\nexport class TableMultipleHeaderFooterExample {\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<mat-form-field>\n  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n    </ng-container>\n\n    <!-- Progress Column -->\n    <ng-container matColumnDef=\"progress\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Color Column -->\n    <ng-container matColumnDef=\"color\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n    </tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\n@Component({\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n})\nexport class TableOverviewExample implements OnInit {\n  displayedColumns: string[] = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n/**\n * @title Table with pagination\n */\n@Component({\n  selector: 'table-pagination-example',\n  styleUrls: ['table-pagination-example.css'],\n  templateUrl: 'table-pagination-example.html',\n})\nexport class TablePaginationExample implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","<table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"$implicit\">\n    <th mat-header-cell *matHeaderCellDef> $implicit </th>\n    <td mat-cell *matCellDef=\"let data\"> {{data}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"index\">\n    <th mat-header-cell *matHeaderCellDef> index </th>\n    <td mat-cell *matCellDef=\"let index = index\"> {{index}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"count\">\n    <th mat-header-cell *matHeaderCellDef> count </th>\n    <td mat-cell *matCellDef=\"let count = count\"> {{count}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"first\">\n    <th mat-header-cell *matHeaderCellDef> first </th>\n    <td mat-cell *matCellDef=\"let first = first\"> {{first}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"last\">\n    <th mat-header-cell *matHeaderCellDef> last </th>\n    <td mat-cell *matCellDef=\"let last = last\"> {{last}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"even\">\n    <th mat-header-cell *matHeaderCellDef> even </th>\n    <td mat-cell *matCellDef=\"let even = even\"> {{even}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"odd\">\n    <th mat-header-cell *matHeaderCellDef> odd </th>\n    <td mat-cell *matCellDef=\"let odd = odd\"> {{odd}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\n/**\n * @title Table showing each row context properties.\n */\n@Component({\n  selector: 'table-row-context-example',\n  styleUrls: ['table-row-context-example.css'],\n  templateUrl: 'table-row-context-example.html',\n})\nexport class TableRowContextExample {\n  displayedColumns: string[] = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\n  data: string[] = ['one', 'two', 'three', 'four', 'five'];\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"selection.toggle(row)\">\n  </tr>\n</table>\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with selection\n */\n@Component({\n  selector: 'table-selection-example',\n  styleUrls: ['table-selection-example.css'],\n  templateUrl: 'table-selection-example.html',\n})\nexport class TableSelectionExample {\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: PeriodicElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with sorting\n */\n@Component({\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n})\nexport class TableSortingExample implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <!-- Star Column -->\n    <ng-container matColumnDef=\"star\" stickyEnd>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-icon>more_vert</mat-icon>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\n\n/**\n * @title Table with sticky columns\n */\n@Component({\n  selector: 'table-sticky-columns-example',\n  styleUrls: ['table-sticky-columns-example.css'],\n  templateUrl: 'table-sticky-columns-example.html',\n})\nexport class TableStickyColumnsExample {\n  displayedColumns =\n      ['name', 'position', 'weight', 'symbol', 'position', 'weight', 'symbol', 'star'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div>\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\n</div>\n\n<div>\n  Sticky Headers:\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\n                           #stickyHeaders=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Footers:\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\n                           #stickyFooters=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Columns:\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\n                           #stickyColumns=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <mat-table [dataSource]=\"dataSource\" *ngFor=\"let table of tables\">\n    <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\n      <mat-header-cell *matHeaderCellDef> Position </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Position Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Name Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Weight Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Symbol Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"filler\">\n      <mat-header-cell *matHeaderCellDef> Filler header cell </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> Filler data cell </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Filler footer cell </mat-footer-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></mat-header-row>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></mat-header-row>\n\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n    <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></mat-footer-row>\n  </mat-table>\n</div>\n","import {Component} from '@angular/core';\nimport {MatButtonToggleGroup} from '@angular/material/button-toggle';\n\n/**\n * @title Flex-layout tables with toggle-able sticky headers, footers, and columns\n */\n@Component({\n  selector: 'table-sticky-complex-flex-example',\n  styleUrls: ['table-sticky-complex-flex-example.css'],\n  templateUrl: 'table-sticky-complex-flex-example.html',\n})\nexport class TableStickyComplexFlexExample {\n  displayedColumns: string[] = [];\n  dataSource = ELEMENT_DATA;\n\n  tables = [0];\n\n  constructor() {\n    this.displayedColumns.length = 24;\n    this.displayedColumns.fill('filler');\n\n    // The first two columns should be position and name; the last two columns: weight, symbol\n    this.displayedColumns[0] = 'position';\n    this.displayedColumns[1] = 'name';\n    this.displayedColumns[22] = 'weight';\n    this.displayedColumns[23] = 'symbol';\n  }\n\n  /** Whether the button toggle group contains the id as an active value. */\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div>\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\n</div>\n\n<div>\n  Sticky Headers:\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\n                           #stickyHeaders=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Footers:\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\n                           #stickyFooters=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Columns:\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\n                           #stickyColumns=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" *ngFor=\"let table of tables\">\n    <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\n      <th mat-header-cell *matHeaderCellDef> Position </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      <td mat-footer-cell *matFooterCellDef> Position Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      <td mat-footer-cell *matFooterCellDef> Name Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n      <td mat-footer-cell *matFooterCellDef> Weight Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n      <td mat-footer-cell *matFooterCellDef> Symbol Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"filler\">\n      <th mat-header-cell *matHeaderCellDef> Filler header cell </th>\n      <td mat-cell *matCellDef=\"let element\"> Filler data cell </td>\n      <td mat-footer-cell *matFooterCellDef> Filler footer cell </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></tr>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></tr>\n\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\nimport {MatButtonToggleGroup} from '@angular/material/button-toggle';\n\n/**\n * @title Tables with toggle-able sticky headers, footers, and columns\n */\n@Component({\n  selector: 'table-sticky-complex-example',\n  styleUrls: ['table-sticky-complex-example.css'],\n  templateUrl: 'table-sticky-complex-example.html',\n})\nexport class TableStickyComplexExample {\n  displayedColumns: string[] = [];\n  dataSource = ELEMENT_DATA;\n\n  tables = [0];\n\n  constructor() {\n    this.displayedColumns.length = 24;\n    this.displayedColumns.fill('filler');\n\n    // The first two columns should be position and name; the last two columns: weight, symbol\n    this.displayedColumns[0] = 'position';\n    this.displayedColumns[1] = 'name';\n    this.displayedColumns[22] = 'weight';\n    this.displayedColumns[23] = 'symbol';\n  }\n\n  /** Whether the button toggle group contains the id as an active value. */\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"transactions\">\n    <!-- Item Column -->\n    <ng-container matColumnDef=\"item\">\n      <th mat-header-cell *matHeaderCellDef> Item </th>\n      <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n      <td mat-footer-cell *matFooterCellDef> Total </td>\n    </ng-container>\n\n    <!-- Cost Column -->\n    <ng-container matColumnDef=\"cost\">\n      <th mat-header-cell *matHeaderCellDef> Cost </th>\n      <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n      <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Table with a sticky footer\n */\n@Component({\n  selector: 'table-sticky-footer-example',\n  styleUrls: ['table-sticky-footer-example.css'],\n  templateUrl: 'table-sticky-footer-example.html',\n})\nexport class TableStickyFooterExample {\n  displayedColumns = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>","import {Component} from '@angular/core';\n\n/**\n * @title Table with sticky header\n */\n@Component({\n  selector: 'table-sticky-header-example',\n  styleUrls: ['table-sticky-header-example.css'],\n  templateUrl: 'table-sticky-header-example.html',\n})\nexport class TableStickyHeaderExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <mat-text-column name=\"position\" [headerText]=\"headerText\"></mat-text-column>\n\n  <!-- Change the header text. -->\n  <mat-text-column name=\"name\" headerText=\"Element\"></mat-text-column>\n\n  <!-- Provide a data accessor for getting the cell text values. -->\n  <mat-text-column name=\"weight\" [dataAccessor]=\"getWeight\"></mat-text-column>\n\n  <!-- Justify the content of the cells to the cell end. -->\n  <mat-text-column name=\"symbol\" justify=\"end\"></mat-text-column>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Use of 'mat-text-column' with various configurations of the interface.\n */\n@Component({\n  selector: 'table-text-column-advanced-example',\n  styleUrls: ['table-text-column-advanced-example.css'],\n  templateUrl: 'table-text-column-advanced-example.html',\n})\nexport class TableTextColumnAdvancedExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  headerText: string;\n\n  decimalPipe = new DecimalPipe('en-US');\n\n  /** Data accessor function that transforms the weight value to have at most 2 decimal digits. */\n  getWeight = (data: PeriodicElement): string => {\n    const result = this.decimalPipe.transform(data.weight, '1.0-2');\n    return result === null ? '' : result;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <mat-text-column name=\"position\"></mat-text-column>\n  <mat-text-column name=\"name\"></mat-text-column>\n  <mat-text-column name=\"weight\"></mat-text-column>\n  <mat-text-column name=\"symbol\"></mat-text-column>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Use of `mat-text-column` which can be used for simple columns that only need to display\n * a text value for the header and cells.\n */\n@Component({\n  selector: 'table-text-column-example',\n  styleUrls: ['table-text-column-example.css'],\n  templateUrl: 'table-text-column-example.html',\n})\nexport class TableTextColumnExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<wrapper-table [dataSource]=\"dataSource\" [columns]=\"displayedColumns\"\n               matSort #sort=\"matSort\">\n  <!-- Custom column definition to be provided to the wrapper table. -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Custom row definitions to be provided to the wrapper table. -->\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns; \"></tr>\n</wrapper-table>\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-content></ng-content>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Color Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n</table>\n","import {DataSource} from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  OnInit,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {\n  MatColumnDef,\n  MatHeaderRowDef,\n  MatRowDef,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table example that shows how to wrap a table component for definition and behavior reuse.\n */\n@Component({\n  selector: 'table-wrapped-example',\n  styleUrls: ['table-wrapped-example.css'],\n  templateUrl: 'table-wrapped-example.html',\n})\nexport class TableWrappedExample implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild('sort', {static: true}) sort: MatSort;\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n\n/**\n * Table component that accepts column and row definitions in its content to be registered to the\n * table.\n */\n@Component({\n  selector: 'wrapper-table',\n  templateUrl: 'wrapper-table.html',\n  styles: [`\n    table {\n      width: 100%;\n    }\n  `]\n})\nexport class WrapperTable<T> implements AfterContentInit {\n  @ContentChildren(MatHeaderRowDef) headerRowDefs: QueryList<MatHeaderRowDef>;\n  @ContentChildren(MatRowDef) rowDefs: QueryList<MatRowDef<T>>;\n  @ContentChildren(MatColumnDef) columnDefs: QueryList<MatColumnDef>;\n\n  @ViewChild(MatTable, {static: true}) table: MatTable<T>;\n\n  @Input() columns: string[];\n\n  @Input() dataSource: DataSource<T>;\n\n  ngAfterContentInit() {\n    this.columnDefs.forEach(columnDef => this.table.addColumnDef(columnDef));\n    this.rowDefs.forEach(rowDef => this.table.addRowDef(rowDef));\n    this.headerRowDefs.forEach(headerRowDef => this.table.addHeaderRowDef(headerRowDef));\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {TableBasicFlexExample} from './table-basic-flex/table-basic-flex-example';\nimport {TableBasicExample} from './table-basic/table-basic-example';\nimport {TableDynamicColumnsExample} from './table-dynamic-columns/table-dynamic-columns-example';\nimport {TableExpandableRowsExample} from './table-expandable-rows/table-expandable-rows-example';\nimport {TableFilteringExample} from './table-filtering/table-filtering-example';\nimport {TableFooterRowExample} from './table-footer-row/table-footer-row-example';\nimport {TableHttpExample} from './table-http/table-http-example';\nimport {\n  TableMultipleHeaderFooterExample\n} from './table-multiple-header-footer/table-multiple-header-footer-example';\nimport {TableOverviewExample} from './table-overview/table-overview-example';\nimport {TablePaginationExample} from './table-pagination/table-pagination-example';\nimport {TableRowContextExample} from './table-row-context/table-row-context-example';\nimport {TableSelectionExample} from './table-selection/table-selection-example';\nimport {TableSortingExample} from './table-sorting/table-sorting-example';\nimport {TableStickyColumnsExample} from './table-sticky-columns/table-sticky-columns-example';\nimport {\n  TableStickyComplexFlexExample\n} from './table-sticky-complex-flex/table-sticky-complex-flex-example';\nimport {TableStickyComplexExample} from './table-sticky-complex/table-sticky-complex-example';\nimport {TableStickyFooterExample} from './table-sticky-footer/table-sticky-footer-example';\nimport {TableStickyHeaderExample} from './table-sticky-header/table-sticky-header-example';\nimport {\n  TableTextColumnAdvancedExample\n} from './table-text-column-advanced/table-text-column-advanced-example';\nimport {TableTextColumnExample} from './table-text-column/table-text-column-example';\nimport {TableWrappedExample, WrapperTable} from './table-wrapped/table-wrapped-example';\n\nexport {\n  TableBasicExample,          TableBasicFlexExample,\n  TableDynamicColumnsExample, TableExpandableRowsExample,\n  TableFilteringExample,      TableFooterRowExample,\n  TableHttpExample,           TableMultipleHeaderFooterExample,\n  TableOverviewExample,       TablePaginationExample,\n  TableRowContextExample,     TableSelectionExample,\n  TableSortingExample,        TableStickyColumnsExample,\n  TableStickyComplexExample,  TableStickyComplexFlexExample,\n  TableStickyFooterExample,   TableStickyHeaderExample,\n  TableTextColumnExample,     TableTextColumnAdvancedExample,\n  TableWrappedExample,        WrapperTable,\n};\n\nconst EXAMPLES = [\n  TableBasicExample,          TableBasicFlexExample,\n  TableDynamicColumnsExample, TableExpandableRowsExample,\n  TableFilteringExample,      TableFooterRowExample,\n  TableHttpExample,           TableMultipleHeaderFooterExample,\n  TableOverviewExample,       TablePaginationExample,\n  TableRowContextExample,     TableSelectionExample,\n  TableSortingExample,        TableStickyColumnsExample,\n  TableStickyComplexExample,  TableStickyComplexFlexExample,\n  TableStickyFooterExample,   TableStickyHeaderExample,\n  TableTextColumnExample,     TableTextColumnAdvancedExample,\n  TableWrappedExample,        WrapperTable,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class TableExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelement","Component","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵproperty","ELEMENT_DATA","i0.ɵɵlistener","i0.ɵɵpropertyInterpolate","i0.ɵɵattribute","i0.ɵɵclassProp","trigger","state","style","transition","animate","MatTableDataSource","i0.ɵɵtextInterpolate","merge","startWith","switchMap","map","catchError","observableOf","HttpClient","ViewChild","MatPaginator","MatSort","i0.ɵɵstyleProp","SelectionModel","DecimalPipe","ContentChildren","MatHeaderRowDef","MatRowDef","MatColumnDef","MatTable","Input","i0.ɵɵprojection","NgModule","CommonModule","MatButtonModule","MatButtonToggleModule","MatCheckboxModule","MatIconModule","MatInputModule","MatPaginatorModule","MatProgressSpinnerModule","MatSortModule","MatTableModule"],"mappings":"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"}