{"version":3,"file":"material__sidenav.js","sources":["../../../../../../src/components-examples/material/sidenav/sidenav-autosize/sidenav-autosize-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-autosize/sidenav-autosize-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-backdrop/sidenav-backdrop-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-backdrop/sidenav-backdrop-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-disable-close/sidenav-disable-close-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-disable-close/sidenav-disable-close-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-drawer-overview/sidenav-drawer-overview-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-drawer-overview/sidenav-drawer-overview-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-fixed/sidenav-fixed-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-fixed/sidenav-fixed-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-mode/sidenav-mode-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-mode/sidenav-mode-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-open-close/sidenav-open-close-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-open-close/sidenav-open-close-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-overview/sidenav-overview-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-overview/sidenav-overview-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-position/sidenav-position-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-position/sidenav-position-example.html","../../../../../../src/components-examples/material/sidenav/sidenav-responsive/sidenav-responsive-example.ts","../../../../../../src/components-examples/material/sidenav/sidenav-responsive/sidenav-responsive-example.html","../../../../../../src/components-examples/material/sidenav/index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/**\n * @title Autosize sidenav\n */\n@Component({\n  selector: 'sidenav-autosize-example',\n  templateUrl: 'sidenav-autosize-example.html',\n  styleUrls: ['sidenav-autosize-example.css'],\n})\nexport class SidenavAutosizeExample {\n  showFiller = false;\n}\n","<mat-drawer-container class=\"example-container\" autosize>\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\n    <p>Auto-resizing sidenav</p>\n    <p *ngIf=\"showFiller\">Lorem, ipsum dolor sit amet consectetur.</p>\n    <button (click)=\"showFiller = !showFiller\" mat-raised-button>\n      Toggle extra text\n    </button>\n  </mat-drawer>\n\n  <div class=\"example-sidenav-content\">\n    <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\n      Toggle sidenav\n    </button>\n  </div>\n\n</mat-drawer-container>\n","import {Component} from '@angular/core';\n\n/** @title Drawer with explicit backdrop setting */\n@Component({\n  selector: 'sidenav-backdrop-example',\n  templateUrl: 'sidenav-backdrop-example.html',\n  styleUrls: ['sidenav-backdrop-example.css'],\n})\nexport class SidenavBackdropExample {}\n","<mat-drawer-container class=\"example-container\" [hasBackdrop]=\"hasBackdrop.value\">\n  <mat-drawer #drawer [mode]=\"mode.value\">I'm a drawer</mat-drawer>\n  <mat-drawer-content>\n    <mat-form-field>\n      <mat-label>Sidenav mode</mat-label>\n      <mat-select #mode value=\"side\">\n        <mat-option value=\"side\">Side</mat-option>\n        <mat-option value=\"over\">Over</mat-option>\n        <mat-option value=\"push\">Push</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Has backdrop</mat-label>\n      <mat-select #hasBackdrop>\n        <mat-option>Unset</mat-option>\n        <mat-option [value]=\"true\">True</mat-option>\n        <mat-option [value]=\"false\">False</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <button mat-raised-button (click)=\"drawer.toggle()\">Toggle drawer</button>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import {Component, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\n/** @title Sidenav with custom escape and backdrop click behavior */\n@Component({\n  selector: 'sidenav-disable-close-example',\n  templateUrl: 'sidenav-disable-close-example.html',\n  styleUrls: ['sidenav-disable-close-example.css'],\n})\nexport class SidenavDisableCloseExample {\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  reason = '';\n\n  close(reason: string) {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<mat-sidenav-container\n    class=\"example-container\" (backdropClick)=\"close('backdrop')\" *ngIf=\"shouldRun\">\n  <mat-sidenav #sidenav (keydown.escape)=\"close('escape')\" disableClose>\n    <p><button mat-button (click)=\"close('toggle button')\">Toggle</button></p>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <p><button mat-button (click)=\"sidenav.open()\">Open</button></p>\n    <p>Closed due to: {{reason}}</p>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {Component} from '@angular/core';\n\n/** @title Basic drawer */\n@Component({\n  selector: 'sidenav-drawer-overview-example',\n  templateUrl: 'sidenav-drawer-overview-example.html',\n  styleUrls: ['sidenav-drawer-overview-example.css'],\n})\nexport class SidenavDrawerOverviewExample {}\n","<mat-drawer-container class=\"example-container\">\n  <mat-drawer mode=\"side\" opened>Drawer content</mat-drawer>\n  <mat-drawer-content>Main content</mat-drawer-content>\n</mat-drawer-container>\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n/** @title Fixed sidenav */\n@Component({\n  selector: 'sidenav-fixed-example',\n  templateUrl: 'sidenav-fixed-example.html',\n  styleUrls: ['sidenav-fixed-example.css'],\n})\nexport class SidenavFixedExample {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      bottom: 0,\n      fixed: false,\n      top: 0\n    });\n  }\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<ng-container *ngIf=\"shouldRun\">\n  <mat-toolbar class=\"example-header\">Header</mat-toolbar>\n\n  <mat-sidenav-container class=\"example-container\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"example-sidenav\"\n                 [fixedInViewport]=\"options.value.fixed\" [fixedTopGap]=\"options.value.top\"\n                 [fixedBottomGap]=\"options.value.bottom\">\n      {{options.value.fixed ? 'Fixed' : 'Non-fixed'}} Sidenav\n    </mat-sidenav>\n\n    <mat-sidenav-content [formGroup]=\"options\">\n      <p><mat-checkbox formControlName=\"fixed\">Fixed</mat-checkbox></p>\n      <p><mat-form-field>\n        <input matInput type=\"number\" formControlName=\"top\" placeholder=\"Top gap\">\n      </mat-form-field></p>\n      <p><mat-form-field>\n        <input matInput type=\"number\" formControlName=\"bottom\" placeholder=\"Bottom gap\">\n      </mat-form-field></p>\n      <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n  <mat-toolbar class=\"example-footer\">Footer</mat-toolbar>\n</ng-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Sidenav with configurable mode */\n@Component({\n  selector: 'sidenav-mode-example',\n  templateUrl: 'sidenav-mode-example.html',\n  styleUrls: ['sidenav-mode-example.css'],\n})\nexport class SidenavModeExample {\n  mode = new FormControl('over');\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\">\n  <mat-sidenav #sidenav [mode]=\"mode.value\">\n    <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    <p>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\n        <label>Mode:</label>\n        <mat-radio-button value=\"over\">Over</mat-radio-button>\n        <mat-radio-button value=\"side\">Side</mat-radio-button>\n        <mat-radio-button value=\"push\">Push</mat-radio-button>\n      </mat-radio-group>\n    </p>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    <p>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\n        <label>Mode:</label>\n        <mat-radio-button value=\"over\">Over</mat-radio-button>\n        <mat-radio-button value=\"side\">Side</mat-radio-button>\n        <mat-radio-button value=\"push\">Push</mat-radio-button>\n      </mat-radio-group>\n    </p>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {Component} from '@angular/core';\n\n/** @title Sidenav open & close behavior */\n@Component({\n  selector: 'sidenav-open-close-example',\n  templateUrl: 'sidenav-open-close-example.html',\n  styleUrls: ['sidenav-open-close-example.css'],\n})\nexport class SidenavOpenCloseExample {\n  events: string[] = [];\n  opened: boolean;\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\">\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\" (opened)=\"events.push('open!')\"\n               (closed)=\"events.push('close!')\">\n    Sidenav content\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <p><mat-checkbox [(ngModel)]=\"opened\">sidenav.opened</mat-checkbox></p>\n    <p><button mat-button (click)=\"sidenav.toggle()\">sidenav.toggle()</button></p>\n    <p>Events:</p>\n    <div class=\"example-events\">\n      <div *ngFor=\"let e of events\">{{e}}</div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {Component} from '@angular/core';\n\n/** @title Basic sidenav */\n@Component({\n  selector: 'sidenav-overview-example',\n  templateUrl: 'sidenav-overview-example.html',\n  styleUrls: ['sidenav-overview-example.css'],\n})\nexport class SidenavOverviewExample {\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\">\n  <mat-sidenav mode=\"side\" opened>Sidenav content</mat-sidenav>\n  <mat-sidenav-content>Main content</mat-sidenav-content>\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {Component} from '@angular/core';\n\n/** @title Implicit main content with two sidenavs */\n@Component({\n  selector: 'sidenav-position-example',\n  templateUrl: 'sidenav-position-example.html',\n  styleUrls: ['sidenav-position-example.css'],\n})\nexport class SidenavPositionExample {\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\">\n  <mat-sidenav opened mode=\"side\">Start content</mat-sidenav>\n  <mat-sidenav opened mode=\"side\" position=\"end\">End content</mat-sidenav>\n  Implicit main content\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {MediaMatcher} from '@angular/cdk/layout';\nimport {ChangeDetectorRef, Component, OnDestroy} from '@angular/core';\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'sidenav-responsive-example',\n  templateUrl: 'sidenav-responsive-example.html',\n  styleUrls: ['sidenav-responsive-example.css'],\n})\nexport class SidenavResponsiveExample implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  fillerNav = Array.from({length: 50}, (_, i) => `Nav Item ${i + 1}`);\n\n  fillerContent = Array.from({length: 50}, () =>\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n       labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n       laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n       voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n       cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`);\n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","<div class=\"example-container\" [class.example-is-mobile]=\"mobileQuery.matches\" *ngIf=\"shouldRun\">\n  <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n    <button mat-icon-button (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n    <h1 class=\"example-app-name\">Responsive App</h1>\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"example-sidenav-container\"\n                         [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n    <mat-sidenav #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n                 [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\n      <mat-nav-list>\n        <a mat-list-item routerLink=\".\" *ngFor=\"let nav of fillerNav\">{{nav}}</a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <p *ngFor=\"let content of fillerContent\">{{content}}</p>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {SidenavAutosizeExample} from './sidenav-autosize/sidenav-autosize-example';\nimport {SidenavBackdropExample} from './sidenav-backdrop/sidenav-backdrop-example';\nimport {SidenavDisableCloseExample} from './sidenav-disable-close/sidenav-disable-close-example';\nimport {\n  SidenavDrawerOverviewExample\n} from './sidenav-drawer-overview/sidenav-drawer-overview-example';\nimport {SidenavFixedExample} from './sidenav-fixed/sidenav-fixed-example';\nimport {SidenavModeExample} from './sidenav-mode/sidenav-mode-example';\nimport {SidenavOpenCloseExample} from './sidenav-open-close/sidenav-open-close-example';\nimport {SidenavOverviewExample} from './sidenav-overview/sidenav-overview-example';\nimport {SidenavPositionExample} from './sidenav-position/sidenav-position-example';\nimport {SidenavResponsiveExample} from './sidenav-responsive/sidenav-responsive-example';\n\nexport {\n  SidenavAutosizeExample,\n  SidenavBackdropExample,\n  SidenavDisableCloseExample,\n  SidenavDrawerOverviewExample,\n  SidenavFixedExample,\n  SidenavModeExample,\n  SidenavOpenCloseExample,\n  SidenavOverviewExample,\n  SidenavPositionExample,\n  SidenavResponsiveExample,\n};\n\nconst EXAMPLES = [\n  SidenavAutosizeExample,\n  SidenavBackdropExample,\n  SidenavDisableCloseExample,\n  SidenavDrawerOverviewExample,\n  SidenavFixedExample,\n  SidenavModeExample,\n  SidenavOpenCloseExample,\n  SidenavOverviewExample,\n  SidenavPositionExample,\n  SidenavResponsiveExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule,\n    MatRadioModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class SidenavExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate","i0.ɵɵclassProp","i0.ɵɵstyleProp"],"mappings":"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"}