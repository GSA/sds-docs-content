{"version":3,"file":"material__input.js","sources":["../../../../../../src/components-examples/material/input/input-clearable/input-clearable-example.ts","../../../../../../src/components-examples/material/input/input-clearable/input-clearable-example.html","../../../../../../src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.ts","../../../../../../src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.html","../../../../../../src/components-examples/material/input/input-errors/input-errors-example.ts","../../../../../../src/components-examples/material/input/input-errors/input-errors-example.html","../../../../../../src/components-examples/material/input/input-form/input-form-example.ts","../../../../../../src/components-examples/material/input/input-form/input-form-example.html","../../../../../../src/components-examples/material/input/input-hint/input-hint-example.ts","../../../../../../src/components-examples/material/input/input-hint/input-hint-example.html","../../../../../../src/components-examples/material/input/input-overview/input-overview-example.ts","../../../../../../src/components-examples/material/input/input-overview/input-overview-example.html","../../../../../../src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.ts","../../../../../../src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.html","../../../../../../src/components-examples/material/input/index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/**\n * @title Input with a clear button\n */\n@Component({\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrls: ['./input-clearable-example.css'],\n})\nexport class InputClearableExample {\n  value = 'Clear me';\n}\n","<mat-form-field class=\"example-form-field\">\n  <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\">\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrls: ['./input-error-state-matcher-example.css'],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\"\n           [errorStateMatcher]=\"matcher\">\n    <mat-hint>Errors appear instantly!</mat-hint>\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/**\n * @title Input with error messages\n */\n@Component({\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrls: ['input-errors-example.css'],\n})\nexport class InputErrorsExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\">\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs in a form\n */\n@Component({\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrls: ['input-form-example.css'],\n})\nexport class InputFormExample {}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\n  </mat-form-field>\n\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"First name\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\n    </mat-form-field></td>\n  </tr></table>\n\n  <p>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"Address 2\"></textarea>\n    </mat-form-field>\n  </p>\n\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"City\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"State\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\n      <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n    </mat-form-field></td>\n  </tr></table>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with hints\n */\n@Component({\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrls: ['input-hint-example.css'],\n})\nexport class InputHintExample {}\n","<form class=\"example-form\">\n\n  <mat-form-field class=\"example-full-width\">\n    <input matInput #message maxlength=\"256\" placeholder=\"Message\">\n    <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint>\n    <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\n  </mat-form-field>\n  \n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic Inputs\n */\n@Component({\n  selector: 'input-overview-example',\n  styleUrls: ['input-overview-example.css'],\n  templateUrl: 'input-overview-example.html',\n})\nexport class InputOverviewExample {}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <textarea matInput placeholder=\"Leave a comment\"></textarea>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs with prefixes and suffixes\n */\n@Component({\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n  styleUrls: ['input-prefix-suffix-example.css'],\n})\nexport class InputPrefixSuffixExample {}\n","<form class=\"example-form\">\n\n  <mat-form-field class=\"example-full-width\">\n    <span matPrefix>+1 &nbsp;</span>\n    <input type=\"tel\" matInput placeholder=\"Telephone\">\n    <mat-icon matSuffix>mode_edit</mat-icon>\n  </mat-form-field>\n  \n</form>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {InputClearableExample} from './input-clearable/input-clearable-example';\nimport {\n  InputErrorStateMatcherExample\n} from './input-error-state-matcher/input-error-state-matcher-example';\nimport {InputErrorsExample} from './input-errors/input-errors-example';\nimport {InputFormExample} from './input-form/input-form-example';\nimport {InputHintExample} from './input-hint/input-hint-example';\nimport {InputOverviewExample} from './input-overview/input-overview-example';\nimport {InputPrefixSuffixExample} from './input-prefix-suffix/input-prefix-suffix-example';\n\nexport {\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n};\n\nconst EXAMPLES = [\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class InputExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵtextInterpolate1"],"mappings":"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"}