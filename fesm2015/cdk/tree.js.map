{"version":3,"file":"cdk__tree.js","sources":["../../../../../../src/components-examples/cdk/tree/cdk-tree-flat/cdk-tree-flat-example.ts","../../../../../../src/components-examples/cdk/tree/cdk-tree-flat/cdk-tree-flat-example.html","../../../../../../src/components-examples/cdk/tree/cdk-tree-nested/cdk-tree-nested-example.ts","../../../../../../src/components-examples/cdk/tree/cdk-tree-nested/cdk-tree-nested-example.html","../../../../../../src/components-examples/cdk/tree/index.ts"],"sourcesContent":["import {ArrayDataSource} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component} from '@angular/core';\n\n\nconst TREE_DATA: ExampleFlatNode[] = [\n  {\n    name: 'Fruit',\n    expandable: true,\n    level: 0,\n  }, {\n    name: 'Apple',\n    expandable: false,\n    level: 1,\n  }, {\n    name: 'Banana',\n    expandable: false,\n    level: 1,\n  }, {\n    name: 'Fruit loops',\n    expandable: false,\n    level: 1,\n  }, {\n    name: 'Vegetables',\n    expandable: true,\n    level: 0,\n  }, {\n    name: 'Green',\n    expandable: true,\n    level: 1,\n  }, {\n    name: 'Broccoli',\n    expandable: false,\n    level: 2,\n  }, {\n    name: 'Brussel sprouts',\n    expandable: false,\n    level: 2,\n  }, {\n    name: 'Orange',\n    expandable: true,\n    level: 1,\n  }, {\n    name: 'Pumpkins',\n    expandable: false,\n    level: 2,\n  }, {\n    name: 'Carrots',\n    expandable: false,\n    level: 2,\n  }\n];\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  isExpanded?: boolean;\n}\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'cdk-tree-flat-example',\n  templateUrl: 'cdk-tree-flat-example.html',\n  styleUrls: ['cdk-tree-flat-example.css'],\n})\nexport class CdkTreeFlatExample {\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n      node => node.level, node => node.expandable);\n\n  dataSource = new ArrayDataSource(TREE_DATA);\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  getParentNode(node: ExampleFlatNode) {\n    const nodeIndex = TREE_DATA.indexOf(node);\n\n    for (let i = nodeIndex - 1; i >= 0; i--) {\n      if (TREE_DATA[i].level === node.level - 1) {\n        return TREE_DATA[i];\n      }\n    }\n\n    return null;\n  }\n\n  shouldRender(node: ExampleFlatNode) {\n    const parent = this.getParentNode(node);\n    return !parent || parent.isExpanded;\n  }\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <!-- This is the tree node template for leaf nodes -->\n  <cdk-tree-node *cdkTreeNodeDef=\"let node\" cdkTreeNodePadding\n                 [style.display]=\"shouldRender(node) ? 'flex' : 'none'\"\n                 class=\"example-tree-node\">\n    <!-- use a disabled button to provide padding for tree leaf -->\n    <button mat-icon-button disabled></button>\n    {{node.name}}\n  </cdk-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <cdk-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" cdkTreeNodePadding\n                 [style.display]=\"shouldRender(node) ? 'flex' : 'none'\"\n                 class=\"example-tree-node\">\n    <button mat-icon-button cdkTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.filename\"\n            (click)=\"node.isExpanded = !node.isExpanded\"\n            [style.visibility]=\"node.expandable ? 'visible' : 'hidden'\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    {{node.name}}\n  </cdk-tree-node>\n</cdk-tree>\n","import {ArrayDataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {NestedTreeControl} from '@angular/cdk/tree';\n\n/**\n * Food data with nested structure.\n * Each node has a name and an optiona list of children.\n */\ninterface FoodNode {\n  name: string;\n  children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n  {\n    name: 'Fruit',\n    children: [\n      {name: 'Apple'},\n      {name: 'Banana'},\n      {name: 'Fruit loops'},\n    ]\n  }, {\n    name: 'Vegetables',\n    children: [\n      {\n        name: 'Green',\n        children: [\n          {name: 'Broccoli'},\n          {name: 'Brussel sprouts'},\n        ]\n      }, {\n        name: 'Orange',\n        children: [\n          {name: 'Pumpkins'},\n          {name: 'Carrots'},\n        ]\n      },\n    ]\n  },\n];\n\n/**\n * @title Tree with nested nodes\n */\n@Component({\n  selector: 'cdk-tree-nested-example',\n  templateUrl: 'cdk-tree-nested-example.html',\n  styleUrls: ['cdk-tree-nested-example.css'],\n})\nexport class CdkTreeNestedExample {\n  treeControl = new NestedTreeControl<FoodNode> (node => node.children);\n  dataSource = new ArrayDataSource(TREE_DATA);\n\n  hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n}\n","<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <!-- This is the tree node template for leaf nodes -->\n  <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"example-tree-node\">\n    <!-- use a disabled button to provide padding for tree leaf -->\n    <button mat-icon-button disabled></button>\n    {{node.name}}\n  </cdk-nested-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" class=\"example-tree-node\">\n    <button mat-icon-button [attr.aria-label]=\"'toggle ' + node.name\" cdkTreeNodeToggle>\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    {{node.name}}\n    <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n      <ng-container cdkTreeNodeOutlet></ng-container>\n    </div>\n  </cdk-nested-tree-node>\n</cdk-tree>\n","import {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {CdkTreeFlatExample} from './cdk-tree-flat/cdk-tree-flat-example';\nimport {CdkTreeNestedExample} from './cdk-tree-nested/cdk-tree-nested-example';\n\nexport {\n  CdkTreeFlatExample,\n  CdkTreeNestedExample,\n};\n\nconst EXAMPLES = [\n  CdkTreeFlatExample,\n  CdkTreeNestedExample,\n];\n\n@NgModule({\n  imports: [\n    CdkTreeModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class CdkTreeExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵattribute","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵelementContainer","i0.ɵɵclassProp","TREE_DATA"],"mappings":"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"}