{"version":3,"file":"components-examples.js","sources":["../../../../../../src/components/footer/footer-model.ts","../../../../../../src/components/core/common-behaviors/nav-model.ts","../../../../../../src/components/core/common-behaviors/nav-helper.ts","../../../../../../src/components/core/index.ts","../../../../../../src/components/footer/footer.ts","../../../../../../src/components/footer/footer.html","../../../../../../src/components/footer/footer-module.ts","../../../../../../src/components/footer/index.ts","../../../../../../src/components-examples/components/footer/footer-overview/footer-overview-example.ts","../../../../../../src/components-examples/components/footer/footer-overview/footer-overview-example.html","../../../../../../src/components-examples/components/footer/index.ts","../../../../../../src/components-examples/material/tree/tree-checklist/tree-checklist-example.ts","../../../../../../src/components-examples/material/tree/tree-checklist/tree-checklist-example.html","../../../../../../src/components-examples/material/tree/index.ts","../../../../../../src/components-examples/example-module.ts","../../../../../../src/components-examples/example-data.ts","../../../../../../src/components-examples/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {INavigationLink, NavigationMode} from '@gsa-sam/components/core';\n\nexport class FooterModel {\n  /**\n   * List of sections and their links\n   */\n  linkSections: FooterLinkSection[];\n\n  /**\n   * Footer text and logo\n   */\n\n  footerLogo?: FooterLogo;\n}\n\nexport class FooterLinkSection {\n  /**\n   * Title text for the section\n   */\n  text: string;\n\n  /**\n   * Links in the section\n   */\n  links: FooterLink[];\n}\n\nexport class FooterLink implements INavigationLink {\n  /**\n   * Internal Angualr Routes, External HREF, EVENT: event on parent component\n   */\n  mode: NavigationMode;\n\n  /**\n   * Text to be displayed in the link\n   */\n  text: string;\n\n  /**\n   * Navigation Route\n   */\n  route: string;\n}\n\nexport interface FooterLogo {\n  /**\n   * Text for the Header\n   */\n\n  text: string;\n\n  /**\n   * Image Source Path for the Image button\n   */\n\n  imageSourcePath: string;\n\n  /**\n   * Alt text for image\n   */\n\n  imageAltText: string;\n}\n","export interface INavigationLink {\n  /** Text to be displayed in the link */\n  text: string;\n\n  /** Navigation Route */\n  route: string;\n\n  /** Internal Angualr Routes, External HREF, EVENT: event on parent component */\n  mode: NavigationMode;\n}\n\nexport enum NavigationMode {\n  INTERNAL,\n  EXTERNAL,\n  EVENT,\n  LABEL\n}\n\nexport interface Selectable {\n  /** Identifier for the item when search for selected */\n  id: string;\n\n  /** Status of if the item is selected */\n  selected?: boolean;\n}\n","import {INavigationLink, NavigationMode} from './nav-model';\nexport class NavigationHelper {\n\n    /**\n     * checks if link is internal\n     * @param link \n     */\n    isLinkInternal(link: INavigationLink) {\n        return link.mode === NavigationMode.INTERNAL;\n    }\n\n    /**\n     * checks if link is external\n     * @param link \n     */\n    isLinkExternal(link: INavigationLink) {\n        return link.mode === NavigationMode.EXTERNAL;\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport {FooterModel} from './footer-model';\nimport {INavigationLink, NavigationHelper} from '@gsa-sam/components/core';\n\n@Component({\n  selector: 'sds-footer',\n  templateUrl: './footer.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SdsFooter {\n  /** Navigation helper */\n  navigationHelper = new NavigationHelper();\n\n  /** Model used for the different display portions of the footer */\n  @Input() model: FooterModel;\n\n  /** Event for event based */\n  @Output()\n  linkEvent = new EventEmitter<INavigationLink>();\n\n  /**\n   * Link clicked and emits the link data into an event\n   * @param link\n   */\n  linkClickEvent(link: INavigationLink) {\n    this.linkEvent.emit(link);\n    return false;\n  }\n}\n","<footer class=\"usa-footer usa-footer--big\" role=\"contentinfo\">\n  <div class=\"usa-footer__primary-section\">\n    <div class=\"grid-container\">\n      <div class=\"grid-row grid-gap\">\n        <div class=\"mobile-lg:grid-col-12 tablet:grid-col-4\">\n          <div\n            class=\"usa-footer__logo grid-row mobile-lg:grid-gap-1 margin-top-3\"\n          >\n            <div\n              class=\"mobile-lg:grid-col-3 mobile-lg:grid-offset-3 tablet:grid-offset-none tablet:grid-col-auto\"\n            >\n              <img\n                *ngIf=\"model.footerLogo\"\n                class=\"usa-footer__logo-img\"\n                [attr.src]=\"model.footerLogo.imageSourcePath\"\n                [attr.alt]=\"model.footerLogo.imageAltText\"\n              />\n              <a\n                *ngIf=\"!model.footerLogo\"\n                class=\"usa-footer__logo-text\"\n                target=\"_blank\"\n                href=\"http://gsa.gov\"\n              >\n                GSA.gov\n              </a>\n            </div>\n            <div class=\"mobile-lg:grid-col-4 tablet:grid-col-auto\">\n              <span class=\"usa-footer__logo-heading\">\n                {{\n                  model.footerLogo?.text || 'General Services Administration'\n                }}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"mobile-lg:grid-col-12 tablet:grid-col-8\">\n          <nav class=\"usa-footer__nav\">\n            <div class=\"grid-row grid-gap-4\">\n              <div\n                class=\"mobile-lg:grid-col-12 desktop:grid-col-4\"\n                *ngFor=\"let section of model.linkSections\"\n              >\n                <section\n                  class=\"usa-footer__primary-content usa-footer__primary-content--collapsible\"\n                >\n                  <span class=\"usa-footer__primary-link\">{{\n                    section.text\n                  }}</span>\n                  <ul class=\"usa-list usa-list--unstyled\">\n                    <li\n                      class=\"usa-footer__secondary-link\"\n                      *ngFor=\"let link of section.links\"\n                    >\n                      <ng-container\n                        [ngTemplateOutlet]=\"\n                          navigationHelper.isLinkInternal(link)\n                            ? footerRouteLinkTemplate\n                            : navigationHelper.isLinkExternal(link)\n                            ? footerHREFLinkTemplate\n                            : footerEVENTLinkTemplate\n                        \"\n                        [ngTemplateOutletContext]=\"{ $implicit: link }\"\n                      ></ng-container>\n                    </li>\n                  </ul>\n                </section>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"usa-footer__secondary-section\">\n    <div class=\"grid-container\">\n      <div class=\"grid-row\">\n        <div class=\"grid-col-12\">\n          <p class=\"font-body-2xs line-height-sans-4 margin-top-0\">\n            This is a U.S. General Services Administration Federal Government\n            computer system that is\n            <strong>\"FOR OFFICIAL USE ONLY.\"</strong> This system is subject to\n            monitoring. Individuals found performing unauthorized activities are\n            subject to disciplinary action including criminal prosecution.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n\n<ng-template #footerRouteLinkTemplate let-link>\n  <a [routerLink]=\"[link.route]\">{{ link.text }}</a>\n</ng-template>\n\n<ng-template #footerHREFLinkTemplate let-link>\n  <a [attr.href]=\"[link.route]\">{{ link.text }}</a>\n</ng-template>\n\n<ng-template #footerEVENTLinkTemplate let-link>\n  <a href=\"javascript:void(0)\" (click)=\"linkClickEvent(link)\">{{\n    link.text\n  }}</a>\n</ng-template>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {SdsFooter} from './footer';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, RouterModule],\n  exports: [SdsFooter],\n  declarations: [SdsFooter],\n})\nexport class SdsFooterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import {Component, OnInit} from '@angular/core';\nimport {FooterModel} from '@gsa-sam/components/footer';\nimport {NavigationMode} from '@gsa-sam/components/core';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * @title Footer overview\n */\n@Component({\n  selector: 'footer-overview-example',\n  templateUrl: 'footer-overview-example.html',\n  styleUrls: ['footer-overview-example.css']\n})\nexport class FooterOverviewExample implements OnInit{\n  constructor() {}\n  linkEvent = new BehaviorSubject<object>({});\n\n  modelFooter: FooterModel = {\n    linkSections: [\n      {\n        text: 'About beta.SAM.gov',\n        links: [\n          {\n            text: 'Explore Our Community',\n            route: '/',\n            mode: NavigationMode.INTERNAL\n          },\n          { text: 'Release Notes', route: '/', mode: NavigationMode.INTERNAL }\n        ]\n      },\n      {\n        text: 'Our Partners',\n        links: [\n          { text: 'Aquisition.gov', route: '/', mode: NavigationMode.INTERNAL },\n          {\n            text: 'USASpending.gov',\n            route: '/',\n            mode: NavigationMode.INTERNAL\n          },\n          { text: 'Grants.gov', route: '/', mode: NavigationMode.INTERNAL },\n          { text: 'More Partners', route: '/', mode: NavigationMode.INTERNAL }\n        ]\n      },\n      {\n        text: 'Customer Service',\n        links: [\n          {\n            text: 'Learning Center',\n            route: '/',\n            mode: NavigationMode.INTERNAL\n          },\n          {\n            text: 'Contact Federal Service Desk',\n            route: '/',\n            mode: NavigationMode.INTERNAL\n          },\n          { text: 'Resources', route: '/', mode: NavigationMode.INTERNAL },\n          {\n            text: 'Freedom of Information Act',\n            route: '/',\n            mode: NavigationMode.INTERNAL\n          }\n        ]\n      }\n    ]\n  };\n\n  ngOnInit() {\n    this.linkEvent.subscribe(value => {\n      console.log('Link Event Clicked Change');\n      console.log(value);\n    });\n  }\n}\n","<sds-footer [model]=\"modelFooter\" (linkEvent)=\"linkEvent.next($event)\"></sds-footer>\n","import {NgModule} from '@angular/core';\nimport {SdsFooterModule} from '@gsa-sam/components/footer';\nimport {FooterOverviewExample} from './footer-overview/footer-overview-example';\n\nexport {\n  FooterOverviewExample,\n};\n\nconst EXAMPLES = [\n  FooterOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    SdsFooterModule\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class FooterExamplesModule {\n}\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * Node for to-do item\n */\nexport class TodoItemNode {\n  children: TodoItemNode[];\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for to-do list data.\n */\nconst TREE_DATA = {\n  Groceries: {\n    'Almond Meal flour': null,\n    'Organic eggs': null,\n    'Protein Powder': null,\n    Fruits: {\n      Apple: null,\n      Berries: ['Blueberry', 'Raspberry'],\n      Orange: null\n    }\n  },\n  Reminders: [\n    'Cook dinner',\n    'Read the Material Design spec',\n    'Upgrade Application to Angular'\n  ]\n};\n\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a to-do item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n\n  get data(): TodoItemNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(TREE_DATA, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `TodoItemNode`.\n   */\n  buildFileTree(obj: {[key: string]: any}, level: number): TodoItemNode[] {\n    return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\n      const value = obj[key];\n      const node = new TodoItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to to-do list */\n  insertItem(parent: TodoItemNode, name: string) {\n    if (parent.children) {\n      parent.children.push({item: name} as TodoItemNode);\n      this.dataChange.next(this.data);\n    }\n  }\n\n  updateItem(node: TodoItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n}\n\n/**\n * @title Tree with checkboxes\n */\n@Component({\n  selector: 'tree-checklist-example',\n  templateUrl: 'tree-checklist-example.html',\n  styleUrls: ['tree-checklist-example.css'],\n  providers: [ChecklistDatabase]\n})\nexport class TreeChecklistExample {\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\n\n  constructor(private _database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    _database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  getLevel = (node: TodoItemFlatNode) => node.level;\n\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\n\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: TodoItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n        ? existingNode\n        : new TodoItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    return descAllSelected;\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n\n    // Force update for the parent\n    descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    this.checkAllParentsSelection(node);\n  }\n\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\n    const currentLevel = this.getLevel(node);\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: TodoItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this._database.insertItem(parentNode!, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this._database.updateItem(nestedNode!, itemValue);\n  }\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    <mat-checkbox class=\"checklist-leaf-node\"\n                  [checked]=\"checklistSelection.isSelected(node)\"\n                  (change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    <mat-form-field>\n      <input matInput #itemValue placeholder=\"New item...\">\n    </mat-form-field>\n    <button mat-button (click)=\"saveNode(node, itemValue.value)\">Save</button>\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.filename\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\n                  [indeterminate]=\"descendantsPartiallySelected(node)\"\n                  (change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\n    <button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button>\n  </mat-tree-node>\n</mat-tree>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {TreeChecklistExample} from './tree-checklist/tree-checklist-example';\n\nexport {\n  TreeChecklistExample,\n};\n\nconst EXAMPLES = [\n  TreeChecklistExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatTreeModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class TreeExamplesModule {\n}\n","/* tslint:disable */\n\n/**\n ******************************************************************************\n * DO NOT MANUALLY EDIT THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED.\n *\n * IMPORTANT: Due to a bug with the bazel ng_module rule, this file is now\n * checked into the repository. Please rebuild the example module by running\n * the following command: \"yarn gulp build-examples-module\"\n *\n * BUG: https://github.com/angular/angular/issues/30259\n ******************************************************************************/\n\nimport {NgModule} from '@angular/core';\n\nimport {FooterOverviewExample} from '@gsa-sam/components-examples/components/footer';import {FooterExamplesModule} from '@gsa-sam/components-examples/components/footer';import {TreeExamplesModule} from '@gsa-sam/components-examples/material/tree';\n\nexport interface LiveExample {\n  title: string;\n  component: any;\n  additionalFiles?: string[];\n  selectorName?: string;\n}\n\nexport const EXAMPLE_COMPONENTS: {[key: string]: LiveExample} = {\"footer-overview\":{\"title\":\"Footer overview\",\"component\":FooterOverviewExample,\"additionalFiles\":[],\"selectorName\":\"\"}};\n\nexport const EXAMPLE_MODULES = [FooterExamplesModule, TreeExamplesModule];\n\nexport const EXAMPLE_LIST = [FooterOverviewExample];\n\n@NgModule({\n  imports: EXAMPLE_MODULES,\n  exports: EXAMPLE_MODULES,\n  entryComponents: EXAMPLE_LIST,\n})\nexport class ExampleModule { }\n\n// Export all individual example components because ngtsc requires all\n// referenced components to be available in the top-level entry-point.\nexport {FooterOverviewExample}\n","// The example-module file will be auto-generated. As soon as the\n// examples are being compiled, the module file will be generated.\nimport {EXAMPLE_COMPONENTS} from './example-module';\n\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n\n  /** Description of the example. */\n  description: string;\n\n  /** List of files that are part of this example. */\n  exampleFiles: string[];\n\n  /** Selector name of the example component. */\n  selectorName: string;\n\n  /** Name of the file that contains the example component. */\n  indexFilename: string;\n\n  /**\n   * Name of the example component. For examples with multiple components, this property will\n   * include multiple components that are comma separated (e.g. dialog-overview)\n   */\n  componentName: string;\n\n  constructor(example: string) {\n    if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {\n      return;\n    }\n\n    const exampleConfig = EXAMPLE_COMPONENTS[example];\n\n    // TODO(tinayuangao): Do not hard-code extensions\n    this.exampleFiles = ['html', 'ts', 'css'].map(extension => `${example}-example.${extension}`);\n    this.selectorName = this.indexFilename = `${example}-example`;\n\n    if (exampleConfig.additionalFiles) {\n      this.exampleFiles.push(...exampleConfig.additionalFiles);\n    }\n\n    const exampleName = example.replace(/(?:^\\w|\\b\\w)/g, letter => letter.toUpperCase());\n\n    this.description = exampleConfig.title || exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n    this.componentName = exampleConfig.selectorName ||\n                          exampleName.replace(/[\\-]+/g, '') + 'Example';\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵattribute","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelementContainer","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵtextInterpolate1","EXAMPLES"],"mappings":"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"}