{"version":3,"file":"material__input.js","sources":["../../../../../../../src/components-examples/material/input/input-clearable/input-clearable-example.html","../../../../../../../src/components-examples/material/input/input-clearable/input-clearable-example.ts","../../../../../../../src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.html","../../../../../../../src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.ts","../../../../../../../src/components-examples/material/input/input-errors/input-errors-example.html","../../../../../../../src/components-examples/material/input/input-errors/input-errors-example.ts","../../../../../../../src/components-examples/material/input/input-form/input-form-example.ts","../../../../../../../src/components-examples/material/input/input-form/input-form-example.html","../../../../../../../src/components-examples/material/input/input-hint/input-hint-example.ts","../../../../../../../src/components-examples/material/input/input-hint/input-hint-example.html","../../../../../../../src/components-examples/material/input/input-overview/input-overview-example.ts","../../../../../../../src/components-examples/material/input/input-overview/input-overview-example.html","../../../../../../../src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.ts","../../../../../../../src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.html","../../../../../../../src/components-examples/material/input/index.ts"],"sourcesContent":["<mat-form-field class=\"example-form-field\">\n  <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\">\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with a clear button\n */\n@Component({\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrls: ['./input-clearable-example.css'],\n})\nexport class InputClearableExample {\n  value = 'Clear me';\n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\"\n           [errorStateMatcher]=\"matcher\">\n    <mat-hint>Errors appear instantly!</mat-hint>\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrls: ['./input-error-state-matcher-example.css'],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\">\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/**\n * @title Input with error messages\n */\n@Component({\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrls: ['input-errors-example.css'],\n})\nexport class InputErrorsExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs in a form\n */\n@Component({\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrls: ['input-form-example.css'],\n})\nexport class InputFormExample {}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\n  </mat-form-field>\n\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"First name\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\n    </mat-form-field></td>\n  </tr></table>\n\n  <p>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <textarea matInput placeholder=\"Address 2\"></textarea>\n    </mat-form-field>\n  </p>\n\n  <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"City\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"State\">\n    </mat-form-field></td>\n    <td><mat-form-field class=\"example-full-width\">\n      <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\n      <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n    </mat-form-field></td>\n  </tr></table>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with hints\n */\n@Component({\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrls: ['input-hint-example.css'],\n})\nexport class InputHintExample {}\n","<form class=\"example-form\">\n\n  <mat-form-field class=\"example-full-width\">\n    <input matInput #message maxlength=\"256\" placeholder=\"Message\">\n    <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint>\n    <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\n  </mat-form-field>\n  \n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic Inputs\n */\n@Component({\n  selector: 'input-overview-example',\n  styleUrls: ['input-overview-example.css'],\n  templateUrl: 'input-overview-example.html',\n})\nexport class InputOverviewExample {}\n","<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\">\n    <textarea matInput placeholder=\"Leave a comment\"></textarea>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs with prefixes and suffixes\n */\n@Component({\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n  styleUrls: ['input-prefix-suffix-example.css'],\n})\nexport class InputPrefixSuffixExample {}\n","<form class=\"example-form\">\n\n  <mat-form-field class=\"example-full-width\">\n    <span matPrefix>+1 &nbsp;</span>\n    <input type=\"tel\" matInput placeholder=\"Telephone\">\n    <mat-icon matSuffix>mode_edit</mat-icon>\n  </mat-form-field>\n  \n</form>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {InputClearableExample} from './input-clearable/input-clearable-example';\nimport {\n  InputErrorStateMatcherExample\n} from './input-error-state-matcher/input-error-state-matcher-example';\nimport {InputErrorsExample} from './input-errors/input-errors-example';\nimport {InputFormExample} from './input-form/input-form-example';\nimport {InputHintExample} from './input-hint/input-hint-example';\nimport {InputOverviewExample} from './input-overview/input-overview-example';\nimport {InputPrefixSuffixExample} from './input-prefix-suffix/input-prefix-suffix-example';\n\nexport {\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n};\n\nconst EXAMPLES = [\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class InputExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵtextInterpolate1"],"mappings":"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"}