/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/* tslint:disable */
/**
 ******************************************************************************
 * DO NOT MANUALLY EDIT THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED.
 *
 * IMPORTANT: Due to a bug with the bazel ng_module rule, this file is now
 * checked into the repository. Please rebuild the example module by running
 * the following command: "yarn gulp build-examples-module"
 *
 * BUG: https://github.com/angular/angular/issues/30259
 ******************************************************************************/
import { NgModule } from '@angular/core';
import { FooterOverviewExample } from '@gsa-sam/sds-examples/components/footer';
import { FooterExamplesModule } from '@gsa-sam/sds-examples/components/footer';
/**
 * @record
 */
export function LiveExample() { }
if (false) {
    /** @type {?} */
    LiveExample.prototype.title;
    /** @type {?} */
    LiveExample.prototype.component;
    /** @type {?|undefined} */
    LiveExample.prototype.additionalFiles;
    /** @type {?|undefined} */
    LiveExample.prototype.selectorName;
}
/** @type {?} */
export const EXAMPLE_COMPONENTS = { "footer-overview": { "title": "Footer overview", "component": FooterOverviewExample, "additionalFiles": [], "selectorName": "" } };
/** @type {?} */
export const EXAMPLE_MODULES = [FooterExamplesModule];
/** @type {?} */
export const EXAMPLE_LIST = [FooterOverviewExample];
export class ExampleModule {
}
ExampleModule.decorators = [
    { type: NgModule, args: [{
                imports: EXAMPLE_MODULES,
                exports: EXAMPLE_MODULES,
                entryComponents: EXAMPLE_LIST,
            },] }
];
// Export all individual example components because ngtsc requires all
// referenced components to be available in the top-level entry-point.
export { FooterOverviewExample };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS1tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvZXhhbXBsZXMvZXhhbXBsZS1tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBYUEsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV2QyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUFBLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLHlDQUF5QyxDQUFDOzs7O0FBRTNKLGlDQUtDOzs7SUFKQyw0QkFBYzs7SUFDZCxnQ0FBZTs7SUFDZixzQ0FBMkI7O0lBQzNCLG1DQUFzQjs7O0FBR3hCLE1BQU0sT0FBTyxrQkFBa0IsR0FBaUMsRUFBQyxpQkFBaUIsRUFBQyxFQUFDLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxXQUFXLEVBQUMscUJBQXFCLEVBQUMsaUJBQWlCLEVBQUMsRUFBRSxFQUFDLGNBQWMsRUFBQyxFQUFFLEVBQUMsRUFBQzs7QUFFeEwsTUFBTSxPQUFPLGVBQWUsR0FBRyxDQUFDLG9CQUFvQixDQUFDOztBQUVyRCxNQUFNLE9BQU8sWUFBWSxHQUFHLENBQUMscUJBQXFCLENBQUM7QUFPbkQsTUFBTSxPQUFPLGFBQWE7OztZQUx6QixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLGVBQWU7Z0JBQ3hCLE9BQU8sRUFBRSxlQUFlO2dCQUN4QixlQUFlLEVBQUUsWUFBWTthQUM5Qjs7OztBQUtELE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cblxuLyoqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBETyBOT1QgTUFOVUFMTFkgRURJVCBUSElTIEZJTEUuIFRISVMgRklMRSBJUyBBVVRPTUFUSUNBTExZIEdFTkVSQVRFRC5cbiAqXG4gKiBJTVBPUlRBTlQ6IER1ZSB0byBhIGJ1ZyB3aXRoIHRoZSBiYXplbCBuZ19tb2R1bGUgcnVsZSwgdGhpcyBmaWxlIGlzIG5vd1xuICogY2hlY2tlZCBpbnRvIHRoZSByZXBvc2l0b3J5LiBQbGVhc2UgcmVidWlsZCB0aGUgZXhhbXBsZSBtb2R1bGUgYnkgcnVubmluZ1xuICogdGhlIGZvbGxvd2luZyBjb21tYW5kOiBcInlhcm4gZ3VscCBidWlsZC1leGFtcGxlcy1tb2R1bGVcIlxuICpcbiAqIEJVRzogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9pc3N1ZXMvMzAyNTlcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge0Zvb3Rlck92ZXJ2aWV3RXhhbXBsZX0gZnJvbSAnQGdzYS1zYW0vc2RzLWV4YW1wbGVzL2NvbXBvbmVudHMvZm9vdGVyJztpbXBvcnQge0Zvb3RlckV4YW1wbGVzTW9kdWxlfSBmcm9tICdAZ3NhLXNhbS9zZHMtZXhhbXBsZXMvY29tcG9uZW50cy9mb290ZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIExpdmVFeGFtcGxlIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgY29tcG9uZW50OiBhbnk7XG4gIGFkZGl0aW9uYWxGaWxlcz86IHN0cmluZ1tdO1xuICBzZWxlY3Rvck5hbWU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBFWEFNUExFX0NPTVBPTkVOVFM6IHtba2V5OiBzdHJpbmddOiBMaXZlRXhhbXBsZX0gPSB7XCJmb290ZXItb3ZlcnZpZXdcIjp7XCJ0aXRsZVwiOlwiRm9vdGVyIG92ZXJ2aWV3XCIsXCJjb21wb25lbnRcIjpGb290ZXJPdmVydmlld0V4YW1wbGUsXCJhZGRpdGlvbmFsRmlsZXNcIjpbXSxcInNlbGVjdG9yTmFtZVwiOlwiXCJ9fTtcblxuZXhwb3J0IGNvbnN0IEVYQU1QTEVfTU9EVUxFUyA9IFtGb290ZXJFeGFtcGxlc01vZHVsZV07XG5cbmV4cG9ydCBjb25zdCBFWEFNUExFX0xJU1QgPSBbRm9vdGVyT3ZlcnZpZXdFeGFtcGxlXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogRVhBTVBMRV9NT0RVTEVTLFxuICBleHBvcnRzOiBFWEFNUExFX01PRFVMRVMsXG4gIGVudHJ5Q29tcG9uZW50czogRVhBTVBMRV9MSVNULFxufSlcbmV4cG9ydCBjbGFzcyBFeGFtcGxlTW9kdWxlIHsgfVxuXG4vLyBFeHBvcnQgYWxsIGluZGl2aWR1YWwgZXhhbXBsZSBjb21wb25lbnRzIGJlY2F1c2Ugbmd0c2MgcmVxdWlyZXMgYWxsXG4vLyByZWZlcmVuY2VkIGNvbXBvbmVudHMgdG8gYmUgYXZhaWxhYmxlIGluIHRoZSB0b3AtbGV2ZWwgZW50cnktcG9pbnQuXG5leHBvcnQge0Zvb3Rlck92ZXJ2aWV3RXhhbXBsZX1cbiJdfQ==
